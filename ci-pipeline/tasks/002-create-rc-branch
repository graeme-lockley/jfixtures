#!/bin/bash

case "$1" in
	"")
		BRANCH=`git status | grep "On branch master" | wc -l`
		UNSTAGED_CHANGES=`git status | grep "Changes not staged for commit" | wc -l`
		CHANGES_TO_BE_COMMITTED=`git status | grep "Changes to be committed" | wc -l`
		UNTRACKED_CHANGES=`git status | grep "Untracked files:" | wc -l`
		NEED_TO_PUSH=`git status | grep "use \"git push\" to publish your local commits" | wc -l`

		git status

		if [ $BRANCH != '1' ]
		then
			echo "$0: error: Unable to branch as you are not on branch master"
			exit 1
		elif [ $UNSTAGED_CHANGES = '1' ]
		then
			echo "$0: error: Unable to branch as you have changes that are not staged for commit"
			exit 1
		elif [ $CHANGES_TO_BE_COMMITTED = '1' ]
		then
			echo "$0: error: Unable to branch as you have changes on branch master that have yet to be committed"
			exit 1
		elif [ $UNTRACKED_CHANGES = '1' ]
		then
			echo "$0: error: Unable to branch as you have untracked changes on branch master"
			exit 1
		elif [ $NEED_TO_PUSH = '1' ]
		then
			echo "$0: error: Unable to branch as you have committed changes which you need to push to the remote repository"
			exit 1
		else
			BRANCH_NAME=rc-`date "+%Y%m%d-%H%M%S"`
			echo "$0: info: Branch name: $BRANCH_NAME"
			git branch $BRANCH_NAME

			echo "$0: info: Switching to branch: $BRANCH_NAME"
			git checkout $BRANCH_NAME

			exit 0
		fi
		;;
	"info")
		echo "Create Release Candidate Branch: Creates a branch of the format rc-YYYYMMDD-hhmmss to hold the state of a potential release.  This script will ensure that the repo is in the correct state before performing the branching."
		;;
esac

